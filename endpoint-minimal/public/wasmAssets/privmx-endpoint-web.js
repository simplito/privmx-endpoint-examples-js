/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Main.ts":
/*!*********************!*\
  !*** ./src/Main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceFactory = void 0;\nconst Api_1 = __webpack_require__(/*! ./api/Api */ \"./src/api/Api.ts\");\nconst IdGenerator_1 = __webpack_require__(/*! ./api/IdGenerator */ \"./src/api/IdGenerator.ts\");\nconst ServiceFactory_1 = __webpack_require__(/*! ./service/ServiceFactory */ \"./src/service/ServiceFactory.ts\");\nObject.defineProperty(exports, \"ServiceFactory\", ({ enumerable: true, get: function () { return ServiceFactory_1.ServiceFactory; } }));\nfunction setLib() {\n    endpointWasmModule().then((lib) => {\n        ServiceFactory_1.ServiceFactory.init(new Api_1.Api(lib, new IdGenerator_1.IdGenerator()));\n        dispatchEvent(new CustomEvent('libInitialized'));\n    }).catch((err) => console.log(err));\n}\naddEventListener(\"wasmLoaded\", setLib);\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/Main.ts?");

/***/ }),

/***/ "./src/api/Api.ts":
/*!************************!*\
  !*** ./src/api/Api.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Api = void 0;\nclass Api {\n    lib;\n    promises;\n    taskIdGenerator;\n    constructor(lib, taskIdGenerator) {\n        this.promises = new Map();\n        this.lib = lib;\n        this.taskIdGenerator = taskIdGenerator;\n        this.setCallbackFunction((result) => this.getResolve(result));\n    }\n    async runAsync(id, func) {\n        return new Promise((resolve, reject) => {\n            this.promises.set(id, { resolve, reject });\n            func();\n        });\n    }\n    async getResolve(result) {\n        if (result.status == true) {\n            this.promises.get(result.id).resolve(result.data);\n        }\n        else {\n            this.promises.get(result.id).reject(result.error);\n        }\n    }\n    generateId() {\n        return this.taskIdGenerator.generateId();\n    }\n    setCallbackFunction(func) {\n        this.lib.setCallbackFunction(func);\n    }\n}\nexports.Api = Api;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/api/Api.ts?");

/***/ }),

/***/ "./src/api/EndpointApi.ts":
/*!********************************!*\
  !*** ./src/api/EndpointApi.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EndpointApi = void 0;\nconst ServiceApi_1 = __webpack_require__(/*! ./ServiceApi */ \"./src/api/ServiceApi.ts\");\nclass EndpointApi extends ServiceApi_1.ServiceApi {\n    async createEndpoint() {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.createEndpoint(_id));\n    }\n    async deleteEndpoint(ptr) {\n        this.api.lib.deleteEndpoint(ptr);\n    }\n    async waitEventAsJson(ptr) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_waitEventAsJson(_id, ptr));\n    }\n    async subscribeToChannel(ptr, channel) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_subscribeToChannel(_id, ptr, channel));\n    }\n    async unsubscribeFromChannel(ptr, channel) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_unsubscribeFromChannel(_id, ptr, channel));\n    }\n    async platformConnect(ptr, userPrivKey, solutionId, platformUrl) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_platformConnect(_id, ptr, userPrivKey, solutionId, platformUrl));\n    }\n    async platformConnectAnonymous(ptr, solutionId, platformUrl) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_platformConnectAnonymous(_id, ptr, solutionId, platformUrl));\n    }\n    async platformDisconnect(ptr) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_platformDisconnect(_id, ptr));\n    }\n    async contextList(ptr, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_contextList(_id, ptr, skip, limit, sortOrder));\n    }\n    //core\n    async messageSend(ptr, threadId, publicMeta, privateMeta, data) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_messageSend(_id, ptr, threadId, publicMeta, privateMeta, data));\n    }\n    async messageGet(ptr, messageId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_messageGet(_id, ptr, messageId));\n    }\n    async messagesGet(ptr, threadId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_messagesGet(_id, ptr, threadId, skip, limit, sortOrder));\n    }\n    // thread\n    async threadCreate(ptr, contextId, users, managers, title) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadCreate(_id, ptr, contextId, users, managers, title));\n    }\n    async threadUpdate(ptr, threadId, users, managers, title, version, force, generateNewKeyId, accessToOldDataForNewUsers) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadUpdate(_id, ptr, threadId, users, managers, title, version, force, generateNewKeyId, accessToOldDataForNewUsers));\n    }\n    async threadDelete(ptr, threadId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadDelete(_id, ptr, threadId));\n    }\n    async threadGet(ptr, threadId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadGet(_id, ptr, threadId));\n    }\n    async threadList(ptr, contextId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadList(_id, ptr, contextId, skip, limit, sortOrder));\n    }\n    async threadMessageSend(ptr, threadId, clientMsgId, clientUserId, mimetype, text) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadMessageSend(_id, ptr, threadId, clientMsgId, clientUserId, mimetype, text));\n    }\n    async threadMessageDelete(ptr, messageId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadMessageDelete(_id, ptr, messageId));\n    }\n    async threadMessageGet(ptr, messageId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadMessageGet(_id, ptr, messageId));\n    }\n    async threadMessagesGet(ptr, threadId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_threadMessagesGet(_id, ptr, threadId, skip, limit, sortOrder));\n    }\n    // store\n    async storeList(ptr, contextId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeList(_id, ptr, contextId, skip, limit, sortOrder));\n    }\n    async storeGet(ptr, storeId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeGet(_id, ptr, storeId));\n    }\n    async storeCreate(ptr, contextId, users, managers, name) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeCreate(_id, ptr, contextId, users, managers, name));\n    }\n    async storeUpdate(ptr, storeId, users, managers, name, version, force, generateNewKeyId, accessToOldDataForNewUsers) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeUpdate(_id, ptr, storeId, users, managers, name, version, force, generateNewKeyId, accessToOldDataForNewUsers));\n    }\n    async storeDelete(ptr, storeId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeDelete(_id, ptr, storeId));\n    }\n    async storeFileGet(ptr, fileId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileGet(_id, ptr, fileId));\n    }\n    async storeFileList(ptr, storeId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileList(_id, ptr, storeId, skip, limit, sortOrder));\n    }\n    async storeFileCreate(ptr, storeId, size, mimetype, name) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileCreate(_id, ptr, storeId, size, mimetype, name));\n    }\n    async storeFileUpdate(ptr, fileId, size, mimetype, name) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileUpdate(_id, ptr, fileId, size, mimetype, name));\n    }\n    async storeFileOpen(ptr, storeId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileOpen(_id, ptr, storeId));\n    }\n    async storeFileRead(ptr, handle, length) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileRead(_id, ptr, handle, length));\n    }\n    async storeFileWrite(ptr, handle, dataChunk) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileWrite(_id, ptr, handle, dataChunk));\n    }\n    async storeFileSeek(ptr, handle, pos) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileSeek(_id, ptr, handle, pos));\n    }\n    async storeFileClose(ptr, handle) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileClose(_id, ptr, handle));\n    }\n    async storeFileDelete(ptr, fileId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_storeFileDelete(_id, ptr, fileId));\n    }\n    // inbox\n    async inboxCreate(ptr, contextId, users, managers, meta, options) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxCreate(_id, ptr, contextId, users, managers, meta, options));\n    }\n    async inboxUpdate(ptr, inboxId, users, managers, newMeta, newOptions, version, force, generateNewKeyId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxUpdate(_id, ptr, inboxId, users, managers, newMeta, newOptions, version, force, generateNewKeyId));\n    }\n    async inboxGet(ptr, inboxId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxGet(_id, ptr, inboxId));\n    }\n    async inboxList(ptr, contextId, skip, limit, sortOrder) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxList(_id, ptr, contextId, skip, limit, sortOrder));\n    }\n    async inboxPublicViewGet(ptr, inboxId) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxPublicViewGet(_id, ptr, inboxId));\n    }\n    async inboxCreateFileHandle(ptr, fileSize) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxCreateFileHandle(_id, ptr, fileSize));\n    }\n    async inboxSendPrepare(ptr, inboxId, data, inboxFileHandles, userPrivKey) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxSendPrepare(_id, ptr, inboxId, data, inboxFileHandles, userPrivKey));\n    }\n    async inboxSendFileDataChunk(ptr, inboxHandle, inboxFileHandle, dataChunk) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxSendFileDataChunk(_id, ptr, inboxHandle, inboxFileHandle, dataChunk));\n    }\n    async inboxSendCommit(ptr, inboxHandle) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_inboxSendCommit(_id, ptr, inboxHandle));\n    }\n    // crypto\n    async cryptoPrivKeyNew(ptr, basestring) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoPrivKeyNew(_id, ptr, basestring));\n    }\n    async cryptoPrivKeyNewPbkdf2(ptr, password, salt) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoPrivKeyNewPbkdf2(_id, ptr, password, salt));\n    }\n    async cryptoPubKeyNew(ptr, privkey) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoPubKeyNew(_id, ptr, privkey));\n    }\n    async cryptoEncrypt(ptr, data, key) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoEncrypt(_id, ptr, data, key));\n    }\n    async cryptoDecrypt(ptr, data, key) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoDecrypt(_id, ptr, data, key));\n    }\n    async cryptoSign(ptr, data, key) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoSign(_id, ptr, data, key));\n    }\n    async cryptoKeyConvertPEMToWIF(ptr, keyPEM) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_cryptoKeyConvertPEMToWIF(_id, ptr, keyPEM));\n    }\n    // backend request\n    async backendRequest(ptr, cloudServerUrl, memberToken, method, paramsAsJson) {\n        const _id = this.generateId();\n        return await this.runAsync(_id, () => this.api.lib.Endpoint_backendRequest(_id, ptr, cloudServerUrl, memberToken, method, paramsAsJson));\n    }\n}\nexports.EndpointApi = EndpointApi;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/api/EndpointApi.ts?");

/***/ }),

/***/ "./src/api/IdGenerator.ts":
/*!********************************!*\
  !*** ./src/api/IdGenerator.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdGenerator = void 0;\nclass IdGenerator {\n    _id = 0;\n    generateId() {\n        this._id++;\n        return this._id;\n    }\n}\nexports.IdGenerator = IdGenerator;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/api/IdGenerator.ts?");

/***/ }),

/***/ "./src/api/ServiceApi.ts":
/*!*******************************!*\
  !*** ./src/api/ServiceApi.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceApi = void 0;\nclass ServiceApi {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    async runAsync(id, func) {\n        return this.api.runAsync(id, func);\n    }\n    generateId() {\n        return this.api.generateId();\n    }\n}\nexports.ServiceApi = ServiceApi;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/api/ServiceApi.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceFactory = void 0;\nconst Main_1 = __webpack_require__(/*! ./Main */ \"./src/Main.ts\");\nObject.defineProperty(exports, \"ServiceFactory\", ({ enumerable: true, get: function () { return Main_1.ServiceFactory; } }));\nself.serviceFactory = Main_1.ServiceFactory;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/index.ts?");

/***/ }),

/***/ "./src/service/Endpoint.ts":
/*!*********************************!*\
  !*** ./src/service/Endpoint.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Endpoint = void 0;\nconst Service_1 = __webpack_require__(/*! ./Service */ \"./src/service/Service.ts\");\nclass Endpoint extends Service_1.Service {\n    api;\n    waitEventAsJsonCalls = 0;\n    constructor(api, ptr) {\n        super(ptr);\n        this.api = api;\n    }\n    waitEventAsJson() {\n        if (this.waitEventAsJsonCalls > 0) {\n            throw (\"Running more than two waitEventAsJson() calls at the same time is very dangerous\");\n        }\n        this.waitEventAsJsonCalls++;\n        return this.api.waitEventAsJson(this._servicePtr).finally(() => { this.waitEventAsJsonCalls--; });\n    }\n    subscribeToChannel(channel) {\n        return this.api.subscribeToChannel(this._servicePtr, channel);\n    }\n    unsubscribeFromChannel(channel) {\n        return this.api.unsubscribeFromChannel(this._servicePtr, channel);\n    }\n    platformConnect(userPrivKey, solutionId, platformUrl) {\n        return this.api.platformConnect(this._servicePtr, userPrivKey, solutionId, platformUrl);\n    }\n    platformConnectAnonymous(solutionId, platformUrl) {\n        return this.api.platformConnectAnonymous(this._servicePtr, solutionId, platformUrl);\n    }\n    platformDisconnect() {\n        return this.api.platformDisconnect(this._servicePtr);\n    }\n    contextList(skip, limit, sortOrder) {\n        return this.api.contextList(this._servicePtr, skip, limit, sortOrder);\n    }\n    // core\n    messageSend(threadId, publicMeta, privateMeta, data) {\n        return this.api.messageSend(this._servicePtr, threadId, publicMeta, privateMeta, data);\n    }\n    messageGet(messageId) {\n        return this.api.messageGet(this._servicePtr, messageId);\n    }\n    messagesGet(threadId, skip, limit, sortOrder) {\n        return this.api.messagesGet(this._servicePtr, threadId, skip, limit, sortOrder);\n    }\n    // thread\n    threadCreate(contextId, users, managers, title) {\n        return this.api.threadCreate(this._servicePtr, contextId, users, managers, title);\n    }\n    threadUpdate(threadId, users, managers, title, version, force, generateNewKeyId, accessToOldDataForNewUsers) {\n        return this.api.threadUpdate(this._servicePtr, threadId, users, managers, title, version, force, generateNewKeyId, accessToOldDataForNewUsers);\n    }\n    threadDelete(threadId) {\n        return this.api.threadDelete(this._servicePtr, threadId);\n    }\n    threadGet(threadId) {\n        return this.api.threadGet(this._servicePtr, threadId);\n    }\n    threadList(contextId, skip, limit, sortOrder) {\n        return this.api.threadList(this._servicePtr, contextId, skip, limit, sortOrder);\n    }\n    threadMessageSend(threadId, clientMsgId, clientUserId, mimetype, text) {\n        return this.api.threadMessageSend(this._servicePtr, threadId, clientMsgId, clientUserId, mimetype, text);\n    }\n    threadMessageDelete(messageId) {\n        return this.api.threadMessageDelete(this._servicePtr, messageId);\n    }\n    threadMessageGet(messageId) {\n        return this.api.threadMessageGet(this._servicePtr, messageId);\n    }\n    threadMessagesGet(threadId, skip, limit, sortOrder) {\n        return this.api.threadMessagesGet(this._servicePtr, threadId, skip, limit, sortOrder);\n    }\n    // store\n    storeList(contextId, skip, limit, sortOrder) {\n        return this.api.storeList(this._servicePtr, contextId, skip, limit, sortOrder);\n    }\n    storeGet(storeId) {\n        return this.api.storeGet(this._servicePtr, storeId);\n    }\n    storeCreate(contextId, users, managers, name) {\n        return this.api.storeCreate(this._servicePtr, contextId, users, managers, name);\n    }\n    storeUpdate(storeId, users, managers, name, version, force, generateNewKeyId, accessToOldDataForNewUsers) {\n        return this.api.storeUpdate(this._servicePtr, storeId, users, managers, name, version, force, generateNewKeyId, accessToOldDataForNewUsers);\n    }\n    storeDelete(storeId) {\n        return this.api.storeDelete(this._servicePtr, storeId);\n    }\n    storeFileGet(fileId) {\n        return this.api.storeFileGet(this._servicePtr, fileId);\n    }\n    storeFileList(storeId, skip, limit, sortOrder) {\n        return this.api.storeFileList(this._servicePtr, storeId, skip, limit, sortOrder);\n    }\n    storeFileCreate(storeId, size, mimetype, name) {\n        return this.api.storeFileCreate(this._servicePtr, storeId, size, mimetype, name);\n    }\n    storeFileUpdate(fileId, size, mimetype, name) {\n        return this.api.storeFileUpdate(this._servicePtr, fileId, size, mimetype, name);\n    }\n    storeFileOpen(fileId) {\n        return this.api.storeFileOpen(this._servicePtr, fileId);\n    }\n    storeFileRead(handle, length) {\n        if (length > 1048576) {\n            throw (\"Reading big chunk is very dangerous\");\n        }\n        return this.api.storeFileRead(this._servicePtr, handle, length);\n    }\n    storeFileWrite(handle, dataChunk) {\n        if (dataChunk.length > 1048576) {\n            throw (\"Writing big chunk is very dangerous\");\n        }\n        return this.api.storeFileWrite(this._servicePtr, handle, dataChunk);\n    }\n    storeFileSeek(handle, pos) {\n        return this.api.storeFileSeek(this._servicePtr, handle, pos);\n    }\n    storeFileClose(handle) {\n        return this.api.storeFileClose(this._servicePtr, handle);\n    }\n    storeFileDelete(fileId) {\n        return this.api.storeFileDelete(this._servicePtr, fileId);\n    }\n    // inbox\n    inboxCreate(contextId, users, managers, meta, options) {\n        return this.api.inboxCreate(this._servicePtr, contextId, users, managers, meta, options);\n    }\n    inboxUpdate(inboxId, users, managers, newMeta, newOptions, version, force, generateNewKeyId) {\n        return this.api.inboxUpdate(this._servicePtr, inboxId, users, managers, newMeta, newOptions, version, force, generateNewKeyId);\n    }\n    inboxGet(inboxId) {\n        return this.api.inboxGet(this._servicePtr, inboxId);\n    }\n    inboxList(contextId, skip, limit, sortOrder) {\n        return this.api.inboxList(this._servicePtr, contextId, skip, limit, sortOrder);\n    }\n    inboxPublicViewGet(inboxId) {\n        return this.api.inboxPublicViewGet(this._servicePtr, inboxId);\n    }\n    inboxCreateFileHandle(fileSize) {\n        return this.api.inboxCreateFileHandle(this._servicePtr, fileSize);\n    }\n    inboxSendPrepare(inboxId, data, inboxFileHandles, userPrivKey) {\n        return this.api.inboxSendPrepare(this._servicePtr, inboxId, data, inboxFileHandles, userPrivKey);\n    }\n    inboxSendFileDataChunk(inboxHandle, inboxFileHandle, dataChunk) {\n        return this.api.inboxSendFileDataChunk(this._servicePtr, inboxHandle, inboxFileHandle, dataChunk);\n    }\n    inboxSendCommit(inboxHandle) {\n        return this.api.inboxSendCommit(this._servicePtr, inboxHandle);\n    }\n    // crypto\n    cryptoPrivKeyNew(basestring) {\n        return this.api.cryptoPrivKeyNew(this._servicePtr, basestring);\n    }\n    cryptoPrivKeyNewPbkdf2(password, salt) {\n        return this.api.cryptoPrivKeyNewPbkdf2(this._servicePtr, password, salt);\n    }\n    cryptoPubKeyNew(privkey) {\n        return this.api.cryptoPubKeyNew(this._servicePtr, privkey);\n    }\n    cryptoEncrypt(data, key) {\n        if (!(data instanceof Uint8Array)) {\n            throw \"data must be Uint8Array\";\n        }\n        if (!(key instanceof Uint8Array)) {\n            throw \"key must be Uint8Array\";\n        }\n        return this.api.cryptoEncrypt(this._servicePtr, data, key);\n    }\n    cryptoDecrypt(data, key) {\n        if (!(data instanceof Uint8Array)) {\n            throw \"data must be Uint8Array\";\n        }\n        if (!(key instanceof Uint8Array)) {\n            throw \"key must be Uint8Array\";\n        }\n        return this.api.cryptoDecrypt(this._servicePtr, data, key);\n    }\n    cryptoSign(data, key) {\n        if (!(data instanceof Uint8Array)) {\n            throw \"data must be Uint8Array\";\n        }\n        if (typeof (key) != \"string\") {\n            throw \"key must be string\";\n        }\n        return this.api.cryptoSign(this._servicePtr, data, key);\n    }\n    cryptoKeyConvertPEMToWIF(keyPEM) {\n        return this.api.cryptoKeyConvertPEMToWIF(this._servicePtr, keyPEM);\n    }\n    // backed request\n    backendRequest(cloudServerUrl, memberToken, method, paramsAsJson) {\n        return this.api.backendRequest(this._servicePtr, cloudServerUrl, memberToken, method, paramsAsJson);\n    }\n}\nexports.Endpoint = Endpoint;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/service/Endpoint.ts?");

/***/ }),

/***/ "./src/service/Service.ts":
/*!********************************!*\
  !*** ./src/service/Service.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Service = void 0;\nclass Service {\n    _servicePtr = 0;\n    constructor(ptr) {\n        this._servicePtr = ptr;\n    }\n    get servicePtr() {\n        return this._servicePtr;\n    }\n    assignIdToCallback(callback, id) {\n        let o = callback;\n        if (o.__pmxCallbackIds == undefined) {\n        }\n        o.__pmxCallbackIds = id;\n    }\n    getCallbackId(callback) {\n        let o = callback;\n        return o.__pmxCallbackIds;\n    }\n}\nexports.Service = Service;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/service/Service.ts?");

/***/ }),

/***/ "./src/service/ServiceFactory.ts":
/*!***************************************!*\
  !*** ./src/service/ServiceFactory.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceFactory = void 0;\nconst EndpointApi_1 = __webpack_require__(/*! ../api/EndpointApi */ \"./src/api/EndpointApi.ts\");\nconst Endpoint_1 = __webpack_require__(/*! ./Endpoint */ \"./src/service/Endpoint.ts\");\nclass ServiceFactory {\n    static api;\n    static endpointApi;\n    static init(api) {\n        this.api = api;\n        this.endpointApi = new EndpointApi_1.EndpointApi(api);\n    }\n    static async createEndpoint() {\n        return new Endpoint_1.Endpoint(this.endpointApi, await this.endpointApi.createEndpoint());\n    }\n    static deleteEndpoint(service) {\n        this.endpointApi.deleteEndpoint(service.servicePtr);\n    }\n}\nexports.ServiceFactory = ServiceFactory;\n\n\n//# sourceURL=webpack://privmx-endpoint-wasm-api/./src/service/ServiceFactory.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;